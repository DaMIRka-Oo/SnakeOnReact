{"ast":null,"code":"var _jsxFileName = \"/home/damik/WebstormProjects/untitled1/src/App.js\";\nimport React, { Component } from 'react';\nimport Snake from \"./Snake\";\nimport Food from \"./Food\";\n\nconst getRandomCoordinates = () => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random() * (max - min + 1) + min) / 10) * 10;\n  let y = Math.floor((Math.random() * (max - min + 1) + min) / 10) * 10;\n  return [x, y];\n};\n\nconst initialState = {\n  food: getRandomCoordinates(),\n  speed: 500,\n  direction: 'RIGHT',\n  snakeDots: [[0, 0], [10, 0]],\n  play: true,\n  increase: false,\n  again: false\n};\nlet interval;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n\n    this.onKeyDown = e => {\n      e = e || window.event;\n\n      switch (e.keyCode) {\n        case 38:\n          if (this.state.direction != 'DOWN') this.setState({\n            direction: 'UP'\n          });\n          break;\n\n        case 40:\n          if (this.state.direction != 'UP') this.setState({\n            direction: 'DOWN'\n          });\n          break;\n\n        case 37:\n          if (this.state.direction != 'RIGHT') this.setState({\n            direction: 'LEFT'\n          });\n          break;\n\n        case 39:\n          if (this.state.direction != 'LEFT') this.setState({\n            direction: 'RIGHT'\n          });\n          break;\n      }\n    };\n\n    this.moveSnake = () => {\n      let dots = [...this.state.snakeDots];\n      let head = dots[dots.length - 1];\n\n      switch (this.state.direction) {\n        case 'RIGHT':\n          head = [head[0] + 10, head[1]];\n          break;\n\n        case 'LEFT':\n          head = [head[0] - 10, head[1]];\n          break;\n\n        case 'DOWN':\n          head = [head[0], head[1] + 10];\n          break;\n\n        case 'UP':\n          head = [head[0], head[1] - 10];\n          break;\n      }\n\n      dots.shift();\n      dots.push(head);\n      this.setState({\n        snakeDots: dots\n      });\n    };\n  }\n\n  componentDidMount() {\n    interval = setInterval(this.moveSnake, this.state.speed);\n    document.onkeydown = this.onKeyDown;\n  }\n\n  componentDidUpdate() {\n    if (this.state.play) {\n      this.checkIfOutOfBorders();\n      this.checkIfCollapsed();\n      this.checkIfEat();\n    }\n\n    if (this.state.again) {\n      interval = setInterval(this.moveSnake, this.state.speed);\n      this.setState({\n        again: false\n      });\n    }\n  }\n\n  checkIfOutOfBorders() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n\n    if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0) {\n      this.onGameOver();\n    }\n  }\n\n  checkIfEat() {\n    let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n    let food = this.state.food;\n\n    if (head[0] == food[0] && head[1] == food[1]) {\n      let snake = [...this.state.snakeDots];\n      let flag = false;\n\n      while (!flag) {\n        let num = getRandomCoordinates();\n        let flag2 = false;\n        snake.forEach(dot => {\n          if (num[0] == dot[0] && num[1] == dot[1]) {\n            flag2 = true;\n          }\n        });\n\n        if (!flag2) {\n          flag = true;\n        }\n      }\n\n      this.setState({\n        food: getRandomCoordinates()\n      });\n      this.enlargeSnake();\n\n      if (this.state.speed > 200) {\n        this.setState({\n          speed: this.state.speed - 60\n        });\n      }\n\n      this.state.increase = true;\n    }\n\n    if (this.state.increase) this.increaseSpeed();\n  }\n\n  incrementCount() {\n    this.setState(() => {\n      // Важно: используем `state` вместо `this.state` при обновлении.\n      return {\n        play: 2\n      };\n    });\n  }\n\n  onGameOver() {\n    // alert(`Game Over. Snake length is ${this.state.snakeDots.length}`);\n    clearInterval(interval);\n    this.setState({\n      play: false\n    });\n  }\n\n  playAgain() {\n    if (!this.state.play) {\n      this.setState(initialState);\n      this.setState({\n        again: true\n      });\n    } //interval = setInterval(this.moveSnake, this.state.speed);\n\n  }\n\n  enlargeSnake() {\n    let newSnake = [...this.state.snakeDots];\n    newSnake.unshift([]);\n    this.setState({\n      snakeDots: newSnake\n    });\n  }\n\n  increaseSpeed() {\n    clearInterval(interval);\n    interval = setInterval(this.moveSnake, this.state.speed);\n    this.setState({\n      increase: false\n    });\n  }\n\n  checkIfCollapsed() {\n    let snake = [...this.state.snakeDots];\n    let head = snake[snake.length - 1];\n    snake.pop();\n    snake.forEach(dot => {\n      if (head[0] == dot[0] && head[1] == dot[1]) {\n        this.onGameOver();\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Snake, {\n      snakeDots: this.state.snakeDots,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Food, {\n      dot: this.state.food,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }, \"\\u0412\\u0430\\u0448 \\u0441\\u0447\\u0451\\u0442 \", this.state.snakeDots.length - 2), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.playAgain.bind(this),\n      className: \"button-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, \"\\u041D\\u0430\\u0447\\u0430\\u0442\\u044C \\u0437\\u0430\\u043D\\u043E\\u0432\\u043E\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/damik/WebstormProjects/untitled1/src/App.js"],"names":["React","Component","Snake","Food","getRandomCoordinates","min","max","x","Math","floor","random","y","initialState","food","speed","direction","snakeDots","play","increase","again","interval","App","state","onKeyDown","e","window","event","keyCode","setState","moveSnake","dots","head","length","shift","push","componentDidMount","setInterval","document","onkeydown","componentDidUpdate","checkIfOutOfBorders","checkIfCollapsed","checkIfEat","onGameOver","snake","flag","num","flag2","forEach","dot","enlargeSnake","increaseSpeed","incrementCount","clearInterval","playAgain","newSnake","unshift","pop","render","bind"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Snake from \"./Snake\";\nimport Food from \"./Food\";\n\nconst getRandomCoordinates = () =>{\n    let min = 1;\n    let max = 98;\n    let x = Math.floor((Math.random()*(max - min + 1)+min) / 10)*10\n    let y = Math.floor((Math.random()*(max - min + 1)+min) / 10)*10\n    return [x, y]\n}\n\nconst initialState = {\n    food: getRandomCoordinates(),\n    speed: 500,\n    direction: 'RIGHT',\n    snakeDots:[\n        [0, 0],\n        [10, 0]\n    ],\n    play: true,\n    increase: false,\n    again: false\n}\n\n\n\n\n\nlet interval;\n\n\n\nclass App extends Component {\n  state = initialState;\n\n  componentDidMount() {\n      interval = setInterval(this.moveSnake, this.state.speed);\n\n      document.onkeydown = this.onKeyDown;\n  }\n\n\n\n  componentDidUpdate() {\n      if (this.state.play){\n          this.checkIfOutOfBorders();\n          this.checkIfCollapsed();\n          this.checkIfEat();\n      }\n        if (this.state.again) {\n            interval = setInterval(this.moveSnake, this.state.speed);\n            this.setState({\n                again: false\n            })\n        }\n  }\n\n    onKeyDown = (e) =>{\n      e = e || window.event;\n      switch (e.keyCode){\n          case 38:\n              if (this.state.direction != 'DOWN' ) this.setState({direction: 'UP'});\n              break;\n          case 40:\n              if (this.state.direction != 'UP' ) this.setState({direction: 'DOWN'});\n              break;\n          case 37:\n              if (this.state.direction != 'RIGHT' ) this.setState({direction: 'LEFT'});\n              break;\n          case 39:\n              if (this.state.direction != 'LEFT' ) this.setState({direction: 'RIGHT'});\n              break;\n      }\n  }\n\n\n  moveSnake = () =>{\n      let dots = [...this.state.snakeDots];\n      let head = dots[dots.length - 1];\n\n      switch (this.state.direction) {\n          case 'RIGHT':\n              head = [head[0] + 10, head[1]]\n              break;\n          case 'LEFT':\n              head = [head[0] - 10, head[1]]\n              break;\n          case 'DOWN':\n              head = [head[0], head[1] + 10]\n              break;\n          case 'UP':\n              head = [head[0], head[1] - 10]\n              break;\n      }\n\n\n      dots.shift();\n      dots.push(head);\n      this.setState({\n          snakeDots: dots\n      })\n  }\n\n  checkIfOutOfBorders(){\n      let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n      if (head[0] >= 100 || head[1] >= 100 || head[0] < 0 || head[1] < 0){\n          this.onGameOver();\n      }\n  }\n\n  checkIfEat(){\n      let head = this.state.snakeDots[this.state.snakeDots.length - 1];\n      let food = this.state.food;\n      if (head[0] == food[0] && head[1] == food[1]){\n          let snake = [...this.state.snakeDots];\n          let flag = false;\n\n          while(!flag){\n              let num = getRandomCoordinates();\n              let flag2 = false;\n              snake.forEach(dot => {\n                  if (num[0] == dot[0] && num[1] == dot[1]){\n                      flag2 = true;\n\n                  }\n              })\n              if (!flag2){\n                  flag = true;\n              }\n          }\n\n          this.setState({\n              food: getRandomCoordinates()\n          })\n          this.enlargeSnake();\n          if (this.state.speed > 200){\n              this.setState({\n                  speed: this.state.speed - 60\n              })\n          }\n          this.state.increase = true;\n      }\n      if (this.state.increase) this.increaseSpeed();\n  }\n\n    incrementCount() {\n        this.setState(() => {\n            // Важно: используем `state` вместо `this.state` при обновлении.\n            return {play: 2}\n        });\n    }\n\n  onGameOver(){\n     // alert(`Game Over. Snake length is ${this.state.snakeDots.length}`);\n      clearInterval(interval);\n      this.setState({play: false});\n\n  }\n\n    playAgain(){\n      if (!this.state.play){\n          this.setState(initialState);\n          this.setState({\n              again: true\n          })\n\n      }\n\n        //interval = setInterval(this.moveSnake, this.state.speed);\n    }\n\n\n  enlargeSnake(){\n      let newSnake = [...this.state.snakeDots];\n      newSnake.unshift([]);\n\n      this.setState({\n          snakeDots: newSnake\n      })\n  }\n\n  increaseSpeed(){\n\n      clearInterval(interval);\n      interval = setInterval(this.moveSnake, this.state.speed);\n      this.setState({\n          increase: false\n      })\n  }\n\n  checkIfCollapsed(){\n      let snake = [...this.state.snakeDots];\n      let head = snake[snake.length - 1];\n      snake.pop();\n      snake.forEach(dot => {\n          if (head[0] == dot[0] && head[1] == dot[1]){\n              this.onGameOver();\n          }\n      })\n  }\n\n    render(){\n    return (\n        <div>\n            <div className=\"game-area\">\n                <Snake snakeDots={this.state.snakeDots}/>\n                <Food dot={this.state.food}/>\n            </div>\n            <h1 className=\"score\">Ваш счёт {this.state.snakeDots.length - 2}</h1>\n            <button onClick={this.playAgain.bind(this) } className=\"button-1\">Начать заново</button>\n        </div>\n\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}